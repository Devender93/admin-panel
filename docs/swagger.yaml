basePath: /
definitions:
  controllers.AdminLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  controllers.CreateUser:
    properties:
      api_key:
        type: string
      client_id:
        type: string
      country_code:
        type: integer
      email:
        type: string
      id:
        type: integer
      is_active:
        type: integer
      mobile:
        type: string
      password:
        type: string
      product_id:
        type: integer
      referral_code:
        type: string
      role_id:
        type: integer
      successful_referral:
        type: integer
      total_invitees:
        type: integer
      username:
        type: string
      validation_token:
        type: string
    type: object
  controllers.Products:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      referral_link:
        type: string
    type: object
  models.Country:
    properties:
      code:
        type: integer
      continent_name:
        type: string
      name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
      status_code:
        type: integer
    type: object
  models.JsonResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
      status_code:
        type: integer
    type: object
  models.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: Golang GoFiber swagger auto generate step by step by swaggo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ROOTDS API
  version: "1.0"
paths:
  /api/v1/country:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get All Countries
      tags:
      - Countries
    post:
      consumes:
      - application/json
      parameters:
      - description: Country object to be created
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/models.Country'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Create A New Country
      tags:
      - Countries
  /api/v1/country/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Country ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Delete A Country
      tags:
      - Countries
    get:
      consumes:
      - application/json
      parameters:
      - description: Country ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get One Country
      tags:
      - Countries
    put:
      consumes:
      - application/json
      parameters:
      - description: Country ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      - description: Updated country information
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/models.Country'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Update A Country
      tags:
      - Countries
  /api/v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserModel
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /api/v1/product:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get All Products
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product object to be created
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controllers.Products'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Create A New Product
      tags:
      - Products
  /api/v1/product/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Delete A Product
      tags:
      - Products
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get One Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      parameters:
      - description: Products ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controllers.Products'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Update A Product
      tags:
      - Products
  /api/v1/role:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get All Roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      parameters:
      - description: Role object to be created
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Create A New Role
      tags:
      - Roles
  /api/v1/role/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Delete A Role
      tags:
      - Roles
    get:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get One Role
      tags:
      - Roles
    put:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      - description: Updated role information
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Update A Role
      tags:
      - Roles
  /api/v1/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get All Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Create A New User
      tags:
      - Users
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Delete A User
      tags:
      - Users
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Get One User
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        format: int
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.JsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - X-Access-Token: []
      summary: Update A User
      tags:
      - Users
securityDefinitions:
  X-Access-Token:
    in: header
    name: X-Access-Token
    type: apiKey
swagger: "2.0"
